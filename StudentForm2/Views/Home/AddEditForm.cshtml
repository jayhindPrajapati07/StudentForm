@using Microsoft.AspNetCore.Http
@using BackEnd;
@model BackEnd.StudentModel;
@{
    Layout layout = new Layout();
    string DeleteBtnhide = "hide";
    var studentId = "";
    var h1Text = layout.AddStudentHeader;
    var firstName = "";
    var lastName = "";
    var gender = "-1";
    var currentDate = Model?.errDateOfBirth ?? DateTime.Now.Date.ToString("yyyy-MM-dd");
    string dob = currentDate;
    var studentClass = "";
    var address = "";
    var age = "";
    bool EditMode = false;
    var fontsize = layout.fontSize + "px";

    if(ViewBag.Student != null)
    {
        h1Text = layout.EditStudentHeader;
        DeleteBtnhide = "";
        studentId = ViewBag.Student[0];
        firstName = ViewBag.Student[1];
        lastName = ViewBag.Student[2];
        gender = ViewBag.Student[8];
        dob = ViewBag.Student[7];
        dob = dob.ToString().Split(' ')[0];
        DateTime dobDate = DateTime.ParseExact(dob, "M/d/yyyy", null);
        dob = dobDate.ToString("yyyy-MM-dd");
        var age1 = ViewBag.Student[4];
        age = age1.ToString().Split(' ')[0];
        studentClass = ViewBag.Student[5];
        address = ViewBag.Student[6];
        EditMode = true;
    }
    @if (ViewData["studentId"] != null)
    {
            studentId = ViewData["studentId"].ToString();
            h1Text = layout.EditStudentHeader;
            DeleteBtnhide = "";
            EditMode = true;
    }
}
<div class="main-container1">

    <div class="formLayout" style="font-family:@layout.fontFamily;font-size:@fontsize">
        <h1>@h1Text</h1>
        <form id="form" class="form" method="post" action="/Home/Save?studentId=@studentId&EditMode=@EditMode" onsubmit="CleanData()">
            <div class="inputs">
                <label for="firstName">@layout.FirstNameLabel<span>@layout.stars</span></label>
                <div>
                    <input type="text" maxlength="50" name="firstName" value="@(@Model?.FirstName ?? firstName)" id="firstName" placeholder="Please enter First Name" oninput="this.value = this.value.replace(/[^A-Za-z\s]/g, '');">
                    <label class="fname-err error">@Model?.errFirstName</label>
                </div>
            </div>
            <div class="inputs">
                <label for="lastName">@layout.LastNameLabel <span>@layout.stars</span></label>
                <div class="col-sm-9">
                    <input type="text" maxlength="50" name="lastName" value="@(@Model?.LastName ?? lastName)" id="lastName" placeholder="Please enter Last Name" oninput="this.value = this.value.replace(/[^A-Za-z\s]/g, '');">
                    <label class="lname-err error">@Model?.errLastName</label>
                </div>
            </div>
            <div class="inputs">
                <label for="gender">@layout.GenderLabel <span>@layout.stars</span></label>
                <div>
                    <select class="selectGender" aria-label="Default select example" name="genderIndex" id="gender" >
                        
                        <option value="-1" >Select Gender</option>
                        <option value="0" >Male</option>
                        <option value="1" >Female</option>
                    </select>
                    <label class="gender-err error">@Model?.errGender</label>
                </div>
            </div>
            <div class="input-group">
                <div class="input-group-1">
                    <label for="dateOfBirth" class="dob-label">@layout.DateOfBirthLabel <span>@layout.stars</span></label>
                    <div class="dob">
                        <input type="date" class="date-of-birth" name="dateOfBirth" value="@(@Model?.DateOfBirth.ToString("yyyy-MM-dd") ?? dob)" id="dateOfBirth" min="1923-01-01" max="@dob" onkeydown="return false">
                        <label class="dob-err error">@Model?.errDateOfBirth</label>
                    </div>
                </div>
                <div class="input-group-2">
                    <label for="age">@layout.AgeLabel <span>@layout.stars</span></label>
                    <div>
                        <div>
                            <input type="text" maxlength="2" class="age" name="age" value="@(@Model?.Age.ToString() ?? age)" id="age" oninput="this.value = this.value.replace(/[^0-9]/g, ''); if (this.value > 99) this.value = '99';" onkeydown="">
                            <span>years</span>
                        </div>
                        <label class="age-err error">@Model?.errAge</label>
                    </div>
                </div>
            </div>
            <div class="inputs">
                <label for="class">@layout.ClassLabel</label>
                <div class="col-sm-4 px-1 ms-2">
                    <input type="text" name="class" maxlength="50" value="@(@Model?.Class ?? studentClass)" id="class" placeholder="Please enter class">
                </div>
            </div>
            <div class="inputs">
                <label for="address">@layout.AddressLabel</label>
                <div>
                    <textarea name="address" maxlength="100" id="address" class="address" rows="3" placeholder="Please enter address">@(@Model?.Address ?? address)</textarea>
                </div>
            </div>

            <div class="button-group">
                <div class="btn-1">
                    <button type="submit" name="action" value="Delete" id="deleteBtn" class="@DeleteBtnhide" >@layout.deleteBtnText</button>
                </div>
                <div class="btn-2">
                    <button type="submit" name="action" value="Save" id="saveBtn">@layout.saveBtnText</button>

                    <a asp-controller="Home" asp-action="StudentDetailForm" class="btn btn-secondary ">@layout.cancelBtnText</a>
                </div>
            </div>
        </form>
    </div>
</div>

@section scripts{
 <script>
    const DateOfBirth = document.getElementById('dateOfBirth');
    const Age = document.getElementById('age');
    const currentDate = new Date();
    //Set Age from dateOFBIrth
    DateOfBirth.addEventListener('input', () => {
        const selectedDate = new Date(DateOfBirth.value);
        const currentDate = new Date();
        const ageInYears = currentDate.getFullYear() - selectedDate.getFullYear();
        Age.value = ageInYears.toString();
        if (Age.value == '0') {
            Age.value = "";
        }
    });

    //set DateOfBirth from Age
    Age.addEventListener('keyup', () => {
        if (Age.value === "" || Age.value == "0") {
            DateOfBirth.value = currentDate.toISOString().split('T')[0];
        } else {
            let birthYear = currentDate.getFullYear() - parseInt(Age.value);
            //const newDate = new Date(currentYear, currentMonth, currentDay);
            let dob = new Date(birthYear, 0, 2);
            DateOfBirth.value = dob.toISOString().split('T')[0];
        }
    })
    document.getElementById('gender').value = @(@Model?.GenderIndex.ToString() ?? gender);
    
     $('#deleteBtn').on('click', (e) => {
            if (!confirm("Are you sure you want to delete this student record?")) {
                event.preventDefault();
            }
     })

    function CleanData() {
        var form = document.getElementById("form");
        var elements = form.elements;

        for (var i = 0; i < elements.length; i++) {
            var element = elements[i];
            if (element.nodeName === "INPUT" || element.nodeName === "TEXTAREA") {
                element.value = element.value.trim();
            }
        }
    }
 </script>            
}


 